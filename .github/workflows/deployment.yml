name: Create image server and push to dockerhub

on:
  push:
    branches: [develop]

jobs:
  install_project:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    permissions:
      actions: write
      contents: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: list files
        run: ls -la

      - name: Install python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          virtualenvs-path: ./env

      - name: Ensure Poetry is in PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache poetry
        uses: actions/cache@v4
        id: cache-poetry
        with:
          path: |
            ./env
            ~/.cache/pypoetry
          key: ${{runner.os}}-poetry-${{hashFiles('**/poetry.lock')}}
          restore-keys: |
            ${{runner.os}}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Build
        run: poetry build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          retention-days: 1

      - name: Upload deploy render script
        uses: actions/upload-artifact@v4
        with:
          name: deploy_render
          path: deploy_render.py
          retention-days: 7

      - name: Login docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/piggy_bank_server:${{ github.ref_name }}

  deploy_render:
    runs-on: ubuntu-latest
    needs: [install_project]
    strategy:
      matrix:
        python-version: ["3.10"]
    permissions:
      actions: write
      contents: read
    env:
      DOCKER_IMAGE_PATH: "docker.io/flaviodev99/piggy_bank_server:${{ github.ref_name }}"
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy_render
          path: ./deploy_render.py

      - name: Show files dist
        run: ls -la

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: pip install requests pydantic

      - name: Show variables
        run: |
          echo "RENDER_API_KEY: $RENDER_API_KEY"
          echo "DOCKER_IMAGE_PATH: $DOCKER_IMAGE_PATH"

      - name: Deploy to Render
        run: python ./deploy_render.py
